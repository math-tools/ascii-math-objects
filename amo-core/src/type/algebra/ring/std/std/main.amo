/***
Ring

A ring ''R'' is a set with two binary operations ''R.add'' and
''R.prod'' verfiying the following properties.

    1) ''R.add'' defines an abelian group structure with ''R.id_plus''
    as neutral element.

    2) ''R.prod'' defines a monoid structure with ''R.id_prod'' as neutral
    element.

    3) ''R.add'' and ''R.prod'' verify two distribution laws, one on
    the left and the other on the right, as do addition and multiplication
    on natural numbers.

    4) The identities for ''R.add'' and ''R.prod'' are different.
***/

type Ring as R {
  var GrpOpAdd   : GroupAbelian ,
      MonoOpProd : Monoid

  alias_from {
    "GrpOpAdd.{name}" (
      add     : add ,
      id_plus : id
    )

    "MonoOpProd.{name}" (
      prod    : prod ,
      id_prod : id
    )
  }

  axiom {
    same_dom_for_grp_and_mono :=
      (set R = set MonoOpProd) and (set R = set GrpOpAdd)

    non_trivial :=
      id_plus != id_prod

    left_distrib :=
      forall x y z in R ,
      prod x (add y z) = add (prod x y) (prod x z)

    right_distrib :=
      forall x y z in R ,
      prod (add x y) z = add (prod x z) (prod y z)
  }
}
