this::
	date = 2024-07-11


abrev::
    content = :this.name:


===============
Des \objs typés
===============

Dans le monde \latex, taper latex::``a(x+3)`` ne permet pas de distinguer si `a` est une variable, ou une \fonc, voire même un autre \obj \math. Entre autres choses, \amo comble ce manque en s'appuyant sur la notion de type.

	* amo::''var a : \R'' définit une variable réelle.

	* amo::''func a : \C -> \C'' indique une fonction de l'\ens des \nbres complexes dans lui-même.

	* amo::''func a : (\C -> \C) -> \N'' indique une fonction de l'\ens des "\foncs" complexes, de type amo::''\C -> \C'', dans l'\ens des naturels.


caution::
	Nous laissons de côté, pour le moment, les \props sur des types qui constituent le \2e ingrédient important de \amo, un sujet qui sera abordé plus tard dans la section cf::''props''.


content::
	\content/new-var.txt   		??????
	\content/new-func.txt   	?????
	\content/new-type.txt   	????
	\content/trans-typing.txt 	???
