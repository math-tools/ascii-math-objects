/***
Boolean

warning::
    Because the ''Set'' type uses the membership operator of type
    ''Untyped -> \B'', we can't derive ''BoolSet'' from ''Set''.


A boolean "set" ''B'' needs an implemented ''in'' function using
the untyped constants ''true'' and ''false''.


caution::
    Indeed, the definition of ''\B'' that comes after makes possible
    to typed ''true'' and ''false' with ''\B'' the standard instance
    of the type ''BoolSet''.
***/

const true  : Untyped ,
      false : Untyped


type BoolSet : Untyped as B

    + func in (elt : Untyped) -> Untyped := {
        match elt with
          | true  -> true
          | false -> true
          | _     -> false
      }

    + parse "{x1, ...} in B" as (in x1 = true , ...)
