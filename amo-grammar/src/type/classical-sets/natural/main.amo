/***
Natural number set

A natural-numbers-like set is an "add" monoid with an additional binary "prod"
operation respecting the Peano axioms with the more precise ''succ_iter_set''
axiom instead of the ''predecessor'' and the inductive axioms suchas to know
that any element of ''N'' becomes from a finite number of successive
applications of the ''succ'' function on ''zero''.

note::
    It is easy to see that ''one = succ zero'' has no action on products.

    verbatim::
        x * one
        =
        x * (succ zero)
        =
        (x * zero) + x
        =
        zero + x
        =
        x

note::
    The ''predecessor'' axiom states that
    ''forall x in N , x!= 0 ==> (exist x_pr in N , x = succ x_pr)''.
    The problem with this axiom is that it allows the existence of
    non-standard natural sets, unlike the ''succ_iter_set'' axiom which also
    gives the induction principle, but the latter must admit the existence
    of finite sets.
***/

type NatSet : MonoidAdd as N

    // A name change just for consistency.
    + alias op_plus : op

    + func succ    : N -> N ,
           op_prod : N -> N

    + parse "{x} * {y}"
            as
            (op_prod x y)

    + axiom
        + zero_min : forall x in N , zero != succ x

        + universal_diagram : forall x, y in N , succ x = succ y ==> x = y
        + succ_iter_set  : iter_set succ zero = N

        + plus_induc_def : forall x, y in N , succ (x + y) = x + (succ y)
        + zero_absorbent : forall x in N    , zero * x = zero
        + prod_induc_def : forall x, y in N , x * (succ y) = (x * y) + x
