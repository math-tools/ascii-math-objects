/***
Boolean

warning::
    Because the ''Set'' type uses the membership operator of type
    ''Untyped -> \B'', we can't derive ''BoolSet'' from ''Set''.


A boolean "set" ''B'' needs an "hard coded" ''in'' function using
the untyped constants ''true'' and ''false''.


caution::
    Indeed, the definition of ''\B'' makes possible to type ''true''
    and ''false' with ''\B''.
***/

const true  : Untyped ,
      false : Untyped


type BoolSet : Untyped as B {
  parse "{x1, ...} in B" as (in x1 = true , ...)

  fix func in (elt : Untyped) -> Untyped {
    return match elt with
      | true  -> true
      | false -> true
      | _     -> false
  }
}
