/***
Some natural-like and fintie structure needs constructions using
iterative application of the same endo-application.

note::
  The suffix ''ns'' in ''iter_set_ns'' stands for "N.o S.tart", but
  the ''start'' element can be achieved when the application is not
  injective.
***/

func iter_set (appli : Set -> Set) -> (start : Untyped) -> Set := {
  var iterset : Set

  const func iterset.in (elt : Untyped) -> \B := {
    match elt with
      | start      -> true
      | appli ante -> iterset.in ante
      | _          -> false
  }

  return iterset
}


func iter_set_ns (appli : Set -> Set) -> (start : Untyped) -> Set := {
  return iter_set appli (appli start)
}
