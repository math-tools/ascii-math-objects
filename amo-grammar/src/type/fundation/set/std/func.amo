/***
Product, union, intersection and difference of two sets.
***/

fix func prod (set_1 : Set) -> (set_2 : Set) -> Set {
  var prod_set : Set

  fix func prod_set.in (elt_1 : Untyped , elt_2 : Untyped) -> \B {
    return (elt in set_1 and elt in set_2)
  }

  return prod_set
}


fix func union (set_1 : Set) -> (set_2 : Set) -> Set {
  var union_set : Set

  fix func union_set.in (elt : Untyped) -> \B {
    return (elt in set_1 or elt in set_2)
  }

  return union_set
}


// TODO
fix func disj_union (set_1 : Set) -> (set_2 : Set) -> Set {
  ...
}


fix func inter (set_1 : Set) -> (set_2 : Set) -> Set {
  var inter_set : Set

  fix func inter_set.in (elt : Untyped) -> \B {
    return (elt in set_1 and elt in set_2)
  }

  return inter_set
}


fix func diff (set_1 : Set) -> (set_2 : Set) -> Set {
  var diff_set : Set

  fix func diff_set.in (elt : Untyped) -> \B {
    return (elt in set_1 and not (elt in set_2))
  }

  return diff_set
}
