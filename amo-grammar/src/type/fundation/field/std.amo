type Field : Ring as F

    + alias F_GrpPlus : R_Grp ,
            F_Mono    : R_Mono

    // We have to add the fact that ''F - {F.id_plus}'' has a "prod" group
    // structure which extends the monoid one.
    + var F_Star : R_Grp

    + axiom
        + non_zero_dom : set F_Star = (set F) - {F.id_plus}

        + monoid_op_is_F_Star_op : forall x y in F_star ,
                                   F.op_prod x y = F_star.op x y

        + prod_id_is_F_Star_id : F.id_prod = F_Star.id

    + desc
        A field amo::''F'' is a ring such that amo::''F.op_prod''
        defines a group structure on amo::''(set F) - {F.zero}''.

    + note
        We choose to add the amo::''id_prod_is_F_Starid'' axiom to obtain
        a clear specification, but indeed the equality of amo::''F.id_prod''
        and amo::''F_Star.id'' can be proved as it is done below.

        verbatim::
            F.id_prod
            =  { ''non_trivial'' axiom for rings gives F.id_prod in F_star }
            F_star.op F.id_prod F_Star.id
            =  { Use of the ''monoid_op_is_F_Star_op'' axiom }
            F.op_prod F.id_prod F_Star.id
            =
            F_Star.id
