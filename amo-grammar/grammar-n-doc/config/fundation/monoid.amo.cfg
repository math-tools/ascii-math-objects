type monoid



Structure monoid := {
dom : Type ;
op : dom -> dom -> dom where "x * y" := (op x y);
id : dom where "1" := id;
assoc : ∀ x y z, x * (y * z) = (x * y) * z ;
left_neutral : ∀ x, 1 * x = x ;
right_neutral : ∀ x, x * 1 = x



\NewObject\MyVar\GL{\operatorname{GL}}[
    data provide=order,
    data provide=field,
    define keys[1]={
    {order}{ data set={order}{#1} }, % Sets the order
    {field}{ data set={field}{#1} }, % Sets the field
    {arg}{ field={#1} },
    % This way, setting the argument becomes equivalent
    % to setting the field
    },
